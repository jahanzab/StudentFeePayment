// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentFeePayment.Entities;

#nullable disable

namespace StudentFeePayment.Entities.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StudentFeePayment.Entities.Models.Domain.FeePayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FeeAmount")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<int>("FeeYear")
                        .HasColumnType("int");

                    b.Property<bool>("IsPaid")
                        .IsConcurrencyToken()
                        .HasColumnType("bit");

                    b.Property<DateTime>("PaidDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("FeePayment", "school");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "system user",
                            CreatedDate = new DateTime(2023, 11, 19, 18, 5, 26, 322, DateTimeKind.Local).AddTicks(8632),
                            FeeAmount = 102.21m,
                            FeeYear = 2023,
                            IsPaid = true,
                            PaidDate = new DateTime(2023, 11, 19, 18, 5, 26, 322, DateTimeKind.Local).AddTicks(8631),
                            Remarks = "Fee paid",
                            StudentId = 1,
                            UpdatedBy = "system user",
                            UpdatedDate = new DateTime(2023, 11, 19, 18, 5, 26, 322, DateTimeKind.Local).AddTicks(8632)
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "system user",
                            CreatedDate = new DateTime(2023, 11, 19, 18, 5, 26, 322, DateTimeKind.Local).AddTicks(8634),
                            FeeAmount = 90.50m,
                            FeeYear = 2023,
                            IsPaid = true,
                            PaidDate = new DateTime(2023, 11, 19, 18, 5, 26, 322, DateTimeKind.Local).AddTicks(8634),
                            Remarks = "Fee paid",
                            StudentId = 2,
                            UpdatedBy = "system user",
                            UpdatedDate = new DateTime(2023, 11, 19, 18, 5, 26, 322, DateTimeKind.Local).AddTicks(8635)
                        });
                });

            modelBuilder.Entity("StudentFeePayment.Entities.Models.Domain.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("StudentNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("StudentNumber")
                        .IsUnique();

                    b.ToTable("Student", "school");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Islamabad, Pakistan",
                            CreatedBy = "system user",
                            CreatedDate = new DateTime(2023, 11, 19, 18, 5, 26, 322, DateTimeKind.Local).AddTicks(8581),
                            DOB = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jahanzab@live.com",
                            FirstName = "Jahnzab",
                            Grade = "First",
                            LastName = "Ashraf",
                            Phone = "+92 334 6168078",
                            StudentNumber = "00001",
                            UpdatedBy = "system user",
                            UpdatedDate = new DateTime(2023, 11, 19, 18, 5, 26, 322, DateTimeKind.Local).AddTicks(8592)
                        },
                        new
                        {
                            Id = 2,
                            Address = "NY, USA",
                            CreatedBy = "system user",
                            CreatedDate = new DateTime(2023, 11, 19, 18, 5, 26, 322, DateTimeKind.Local).AddTicks(8595),
                            DOB = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john.doe@live.com",
                            FirstName = "John",
                            Grade = "Second",
                            LastName = "Doe",
                            Phone = "+1 (555) 555-1234",
                            StudentNumber = "00002",
                            UpdatedBy = "system user",
                            UpdatedDate = new DateTime(2023, 11, 19, 18, 5, 26, 322, DateTimeKind.Local).AddTicks(8595)
                        });
                });

            modelBuilder.Entity("StudentFeePayment.Entities.Models.Domain.FeePayment", b =>
                {
                    b.HasOne("StudentFeePayment.Entities.Models.Domain.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });
#pragma warning restore 612, 618
        }
    }
}
